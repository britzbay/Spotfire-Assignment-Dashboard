import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Input data

input_data = InputData  # Input data frame from Spotfire


input_data = input_data[(input_data['Year'] >= 2020) & (input_data['Year'] <= 2023)]
input_data = input_data.dropna()
 
# Define independent (X) and dependent (y) variables
X = input_data[['Population', 'Median_Income', 'Unemployment_Rate']]  # Example predictors
y = input_data['Economic_Index']  # Target variable

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=50)

# Initialize and fit the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Prepare output
OutputData = pd.DataFrame({
    'Actual': y_test,
    'Predicted': y_pred
})
OutputMetrics = pd.DataFrame({
    'Metric': ['Mean Squared Error', 'RÂ² Score'],
    'Value': [mse, r2]
})


